name: SonarCloud Quality Gate API
on:
  push:
    branches:
      - main
    #paths:
    #  - 'api/**'
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - 'features/**'
    #paths:
    #  - 'api/**'
jobs:
  #changes:
  #  name: Check changes
  #  runs-on: windows-latest
  #  permissions:
  #    pull-requests: read
  #  outputs:
  #    src: ${{ steps.filter.outputs.src }}
  #  steps:
  #  - uses: dorny/paths-filter@v3
  #    id: filter
  #    with:
  #      filters: |
  #        src:
  #          - 'api/**'
  build:
    name: Build and analyze
    #needs: changes
    #if: ${{ needs.changes.outputs.src == 'true' }}
    runs-on: windows-latest
    steps:
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: 17
          distribution: 'zulu' # Alternative distribution options are available.
      - name: Branch checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~\sonar\cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar
      - name: Cache SonarCloud scanner
        id: cache-sonar-scanner
        uses: actions/cache@v3
        with:
          path: .\.sonar\scanner
          key: ${{ runner.os }}-sonar-scanner
          restore-keys: ${{ runner.os }}-sonar-scanner
      - name: Install SonarCloud scanner
        if: steps.cache-sonar-scanner.outputs.cache-hit != 'true'
        shell: powershell
        run: |
          New-Item -Path .\.sonar\scanner -ItemType Directory
          dotnet tool update dotnet-sonarscanner --tool-path .\.sonar\scanner
      - name: Install DotNet Coverage
        run: |
          dotnet tool install --global dotnet-coverage
      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN_API }}
        shell: powershell
        run: |
          .\.sonar\scanner\dotnet-sonarscanner begin /k:"jforage-sw_test-app" /n:"MyTestApp API" /o:"jforage-sw" /d:sonar.token="${{ secrets.SONAR_TOKEN_API }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.vscoveragexml.reportsPaths=coverage.xml /d:sonar.coverage.exclusions=src/**/Program.cs,src/**/Startup.cs /d:sonar.exclusions=src/**/Migrations/**/*
          dotnet build .\api
          dotnet-coverage collect "dotnet test .\api --no-build --no-restore" -f xml -o "coverage.xml"
          .\.sonar\scanner\dotnet-sonarscanner end /d:sonar.token="${{ secrets.SONAR_TOKEN_API }}"
